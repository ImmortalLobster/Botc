--[[
DealChars
Made by Sionar
--]]


------------------Constants
VERSION = '1.5.8'
COLORS_RGB = {White = {1,1,1}, Brown = {113/255,59/255,23/255}, Red = {219/255,26/255,24/255}, Orange = {244/255,100/255,29/255}, Yellow = {231/255,229/255,44/255}, Green = {49/255,179/255,43/255}, Teal = {33/255,177/255,155/255}, Blue = {31/255,136/255,255/255}, Purple = {160/255,32/255,240/255}, Pink = {245/255,112/255,206/255}, Magenta = {255/255,0/255,127/255}, Lavender = {150/255,123/255,182/255}, Navy = {99/255,109/255,212/255}, Cyan = {73/255,213/255,253/255}, Mint = {137/255,195/255,129/255}, Lime = {184/255,241/255,97/255}, Peach = {241/255,212/255,162/255}, Coral = {226/255,154/255,138/255}, Maroon = {128/255,0,0}, Silver = {190/255,190/255,190/255},}
COLORS_ALL = {'White', 'Brown', 'Red', 'Orange', 'Yellow', 'Green', 'Teal', 'Blue', 'Purple', 'Pink', 'Magenta', 'Lavender', 'Navy', 'Cyan', 'Mint', 'Lime', 'Peach', 'Coral', 'Maroon', 'Silver'}

#include GUIDs.ttslua

------------------Variables
autoTint = true

------------------Functions
function onLoad(save_state)
    refreshButtons()
end

function radius(rad, angle, height)
    return {rad*math.sin(angle*math.pi/180), height, rad*math.cos(angle*math.pi/180)}
end

function dealToPlayers(clickedObject, playerColor)
    if playerColor ~= 'Black' and not debug then
        return
    end
    local debug = Global.getVar('DEBUG')
    local tableSize = Global.getVar('tableSize')
    local colors = Global.getTable('colors')
    local angle = Global.getTable('angle')
    local players = Global.call('updatePlayers')
    local allPlayers = Player.getPlayers()
    local numPlayers = Global.call('getNumPlayers')
    local storytellerMode = Global.getVar('storytellerMode')
    local params, obj, char
    local chars = {}
    local allObjs = getAllObjects()
    local tokenBag, tokenBagTable
    local posTable = {}
    local size, takeIndex
    local rad = tableSize * 0.4 + 6

    for k,v in pairs(colors) do
        posTable[v] = radius(rad, angle[v], 1.1)
        posTable[v][3] = posTable[v][3] + 119
    end

    for k,v in pairs(allObjs) do
        if string.match(v.getName(), ': Reminder Tokens') then
            tokenBag = v
            break
        end
    end

    if self.getQuantity() == 0 then
        Player['Black'].print('Error: No character tokens in the bag.', {1,0,0})
        return
    end


    if #allPlayers > 1 and numPlayers ~= self.getQuantity() and not debug then
        Player['Black'].print('Error: The number of character tokens in the bag does not match the number of players seated.', {1,0,0})
        return
    end

    for k,v in pairs(colors) do
        if players[v] ~= nil or debug or #allPlayers == 1 and self.getQuantity() > 0 then
            params = {
                callback_function =  function(obj) take_callback(obj, v) end,
                position = posTable[v],
                rotation = {0, 0, 0}
            }
            obj = self.takeObject(params)
            if obj then
                char = obj.getName()
                chars[v] = char

                tokenBagTable = tokenBag.getObjects()
                size = tokenBag.getQuantity()
                for j = size,1,-1 do
                    if tokenBagTable[j].name == char then
                        params = {index = j-1, position = posTable[v], rotation = {0, 0, 0}}
                        params.position[2] = params.position[2] + 1
                        tokenBag.takeObject(params)
                    end
                end
                if not debug and #allPlayers ~= 1 then
                    players[v].print('Your character is ' .. char..'!')
                end
            end
        end
    end

    Global.setTable('chars', chars)
    Global.call('refreshUI')
    Global.call('checkSeatedPlayers')
    Global.setVar('started', true)

    local townSquareGen = getObjectFromGUID(TOWN_SQUARE_GUID)
    if storytellerMode then
        if townSquareGen then
            townSquareGen.call('generateGrimNames')
        end
    end

    local nightHelper = getObjectFromGUID(NIGHT_HELPER_GUID)
    if nightHelper then
        nightHelper.call('importCall')
    end

    local charSetup = getObjectFromGUID(CHAR_SETUP_GUID)
    local storageBag = getObjectFromGUID(STORAGE_BAG_GUID)
    if charSetup then
        storageBag.putObject(charSetup)
    end

    Wait.time(function () storageBag.putObject(self) end, 2)
end

function take_callback(object_spawned, color)
    if autoTint then
        object_spawned.setColorTint(COLORS_RGB[color])
    end
    object_spawned.setLock(true)
end

function toggleTint(clickedObject, playerColor)
    if playerColor ~= 'Black' then
        return
    end
    autoTint = not autoTint
    refreshButtons()
end

function refreshButtons()
    self.clearButtons()

    local params
    params = {click_function = 'toggleTint', function_owner = self, position = {0, 0.4, -2.5}, scale = {0.5, 0.5, 0.5}, width = 2000, height = 1000, font_size = 400}
    if autoTint then
        params.label = 'Autotint\nON'
        params.tooltip = 'Click to disable auto-tinting of the Character Tokens.'
    else
        params.label = 'Autotint\nOFF'
        params.tooltip = 'Click to enable auto-tinting of the Character Tokens.'
    end
    self.createButton(params)

    params = {click_function = 'dealToPlayers', function_owner = self, label = 'Deal', tooltip = 'This button will deal the characters in the order inside the bag.\n[aaaaaa](The first character will go to White, then Brown, ... if those players are seated.)[-]\nMake sure to shuffle the bag if you want the characters to be dealt out randomly.',
    position = {0, 0.4, 2.5}, scale = {0.5, 0.5, 0.5}, width = 2000, height = 1000, font_size = 800}
    self.createButton(params)
end
