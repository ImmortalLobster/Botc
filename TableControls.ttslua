--[[
Table Controls
Made by Sionar
--]]


------------------Constants
VERSION = '1.4.0'
BUTTON_W = 500
BUTTON_H = 400
FONT_SIZE = 150
#include GUIDs.ttslua
BUTTON_COLOR = {0,0,0}
BUTTON_FONT_COLOR = {1,1,1}


------------------Variables
tableSize = 10
backgroundDelete = false


------------------Functions
function onLoad(saveString)
    tableSize = Global.getVar('tableSize')
    refreshUI()
    self.setDescription('v ' .. VERSION .. '\nMade by Sionar')
end

function decTableSize(clickedObject, playerColor)
    if playerColor ~= 'Black' then
        return
    end

    tableSize = tableSize - 1
    if tableSize < 5 then
        tableSize = 5
    end
    callResize()
    refreshUI()
end

function incTableSize(clickedObject, playerColor)
    if playerColor ~= 'Black' then
        return
    end

    tableSize = tableSize + 1
    if tableSize > 20 then
        tableSize = 20
    end
    callResize()
    refreshUI()
end

function setTableSize(clickedObject, playerColor, value, stillEditing)
    if not stillEditing then
        if playerColor ~= 'Black' then
            refreshUI()
            return
        end

        tableSize = tonumber(value)
        if tableSize == nil then
            tableSize = 10
        end
        if tableSize < 5 then
            tableSize = 5
        elseif tableSize > 20 then
            tableSize = 20
        end
        callResize()
        refreshUI()
    end
end

function callResize()
    Global.call('setTokenTable')
    Global.call('setDecalTable')
    Global.setVar('tableSize', tableSize)
    Global.call('resizeTable')
    Global.call('moveTokens')
    Global.call('moveDecals')
end


function callShufflePlayers(clickedObject, playerColor)
    if playerColor ~= 'Black' then
        return
    end
    Global.call('shufflePlayers')
end

function callToggleLights(clickedObject, playerColor)
    if playerColor ~= 'Black' then
        return
    end
    Global.call('toggleLights', {switching = true})
end

function deleteBackground(clickedObject, playerColor)
    if playerColor ~= 'Black' then
        return
    end
    backgroundDeleted = true
    local allObjects = getAllObjects()
    for k,v in pairs(allObjects) do
        if v.getName() == 'Background' then
            v.destruct()
        end
    end
    local backgroundBox = getObjectFromGUID(BACKGROUND_BOX_GUID)
    if backgroundBox ~= nil then
        backgroundBox.setScale({0.5,0.5,0.5})
    end
end

function room_cb(obj)
    Global.setVar('ROOM_GUID', obj.getGUID())
end

function callReset(clickedObject, playerColor)
    if playerColor ~= 'Black' then
        return
    end
    Global.call('resetGame')
end

------------------User Interface
function refreshUI()
    self.clearButtons()
    self.clearInputs()
    local buttonParam, inputParam

    buttonParam = {click_function = 'nullFunc', function_owner = self, label = 'Table Size', color = {0,0,0,1}, font_color = stringColorToRGB('White'), color = stringColorToRGB('Black'),
            position = {0,0.2,-1.4}, width = 0, height = 0, font_size = FONT_SIZE}
    self.createButton(buttonParam)

    buttonParam = {click_function = 'decTableSize', function_owner = self, label = '-', color = BUTTON_COLOR, font_color = BUTTON_FONT_COLOR,
            position = {-1.05,0.2,-0.9}, width = 300, height = 300, font_size = FONT_SIZE, tooltip = 'Remove a seat.'}
    self.createButton(buttonParam)

    inputParam = {input_function = 'setTableSize', function_owner = self, position = {0, 0.2, -0.9}, width = 600, height = 300, font_size = 260, tooltip = 'Table Size', validation = 2, alignment = 3, value = tableSize, color = BUTTON_COLOR, font_color = BUTTON_FONT_COLOR}
    self.createInput(inputParam)

    buttonParam = {click_function = 'incTableSize', function_owner = self, label = '+', color = BUTTON_COLOR, font_color = BUTTON_FONT_COLOR,
            position = {1.05,0.2,-0.9}, width = 300, height = 300, font_size = FONT_SIZE, tooltip = 'Add a seat.'}
    self.createButton(buttonParam)

    buttonParam = {click_function = 'callShufflePlayers', function_owner = self, label = 'Shuffle\nSeats', color = BUTTON_COLOR, font_color = BUTTON_FONT_COLOR,
            position = {-0.85,0.2,0}, width = 800, height = BUTTON_H, font_size = FONT_SIZE, tooltip = 'Shuffle seats (Before the game starts).'}
    self.createButton(buttonParam)

    buttonParam = {click_function = 'callToggleLights', function_owner = self, label = 'Toggle\nLights', color = BUTTON_COLOR, font_color = BUTTON_FONT_COLOR,
            position = {0.85,0.2,0}, width = 800, height = BUTTON_H, font_size = FONT_SIZE, tooltip = 'Turn on/off the lights.'}
    self.createButton(buttonParam)

    buttonParam = {click_function = 'deleteBackground', function_owner = self, label = 'Delete\nBackground', color = BUTTON_COLOR, font_color = BUTTON_FONT_COLOR,
            position = {-0.85,0.2,1}, width = 800, height = BUTTON_H, font_size = FONT_SIZE, tooltip = 'Delete the background objects'}
    self.createButton(buttonParam)

    buttonParam = {click_function = 'callReset', function_owner = self, label = 'Reset\nTable', font_color = stringColorToRGB('White'), color = stringColorToRGB('Red'),
            position = {0.85,0.2,1}, width = 800, height = BUTTON_H, font_size = FONT_SIZE, tooltip = 'Reset the game.'}
    self.createButton(buttonParam)
end
