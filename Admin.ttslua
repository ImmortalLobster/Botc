ADMIN_ID = '76561197995280695'

function gradient(str, color1, color2)
    local len = string.len(str)
    local r_step = (color2[1]-color1[1]) / (len-1)
    local g_step = (color2[2]-color1[2]) / (len-1)
    local b_step = (color2[3]-color1[3]) / (len-1)
    local out = ""
    local r, g, b = color1[1], color1[2], color1[3]
    for i = 1, len do
        out = out .. nums_to_bbc({r * 255, g * 255, b * 255}) .. string.sub(str, i, i)
        r = r + r_step
        g = g + g_step
        b = b + b_step
    end
    return out
end

function nums_to_bbc(color)
    local r = string.format("%02x", math.floor(color[1]))
    local g = string.format("%02x", math.floor(color[2]))
    local b = string.format("%02x", math.floor(color[3]))
    return "[" .. r .. g .. b .. "]"
end

function randomColor()
    return {math.random(), math.random(), math.random()}
end

function onChat(message, player)
    local args = {} -- The arguments following a command
    local command, msg, len
    local hasAccess = player.color == 'Black' or player.admin or DEBUG or player.steam_id == ADMIN_ID
    local receiverColor, receiverStrLen

    for v in string.gmatch(message, "%S+") do
        args[#args + 1] = v
    end

    if args[1] ~= nil then
        command = string.lower(args[1])
        len = string.len(command)
        if args[1] == '.w' then
            if not args[2] then
                return false
            end
            receiverColor = args[2]
            receiverStrLen = string.len(receiverColor)
            msg = string.sub(message, len + receiverStrLen + 3)
        else
            msg = string.sub(message, len + 2)
        end
    end

    if command == 'c' then
        player.print(HELP_MESSAGE)
        return false
    elseif command == 'h' then
        for k,v in pairs(history) do
            player.print(v)
        end
        return false
    elseif command == 'r' then
        updatePlayers()
        local char, charOut
        for k,v in pairs(players) do
            if v.steam_id == player.steam_id then
                char = chars[k]
                if char == nil then
                    player.print('You do not have a character.')
                    return false
                else
                    charOut = string.gsub(char, ' ', '_')
                    player.print('Your character is ' .. char .. '!')
                    player.print(char .. ' - ' .. CHARACTERS[charOut].Description)
                    return false
                end
            end
        end
        player.print('You do not have a character.')
        return false
    elseif command == 'v' then
        player.print('Version ' .. VERSION)
        return false
    elseif command == '.w' then
        chatWhisper(player, capitalize(receiverColor), msg)
        return false
    elseif command == '.move' then
        if hasAccess then
            chatMove(capitalize(args[2]), capitalize(args[3]), player)
            return false
        end
    elseif command == '.remove' then
        if hasAccess then
            chatRemove(capitalize(args[2]), player)
            return false
        end
    elseif command == '.swap' then
        if hasAccess then
            chatSwap(capitalize(args[2]), capitalize(args[3]), player)
            return false
        end
    elseif command == 'debug' and DEBUG then
        return false
    elseif command == 'look' and DEBUG then
        chatLook(args[2], player)
        return false
    end

    if player.steam_id == ADMIN_ID then
        name = gradient(player.steam_name, {73/255,213/255,253/255}, {1,1,1})
        if playersExIds['Cyan'] == ADMIN_ID then
            name = gradient('Cyanar', {73/255,213/255,253/255}, {1,1,1})
        end
        message = gradient(message, {1,1,1}, randomColor())
        printToAll('[i]' .. name .. ': ' .. message .. '[/i]')
        return false
    end

    for k,v in pairs(COLORS_EX) do
        if playersExIds[v] == player.steam_id then
            printToAll(COLORS_BBC[v] .. player.steam_name .. ':[-] ' .. message)
            return false
        end
    end
end
